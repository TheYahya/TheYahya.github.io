<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>performance on Yahya SayadArbabi - Blog</title><link>https://theyahya.com/tags/performance/</link><description>Recent content in performance on Yahya SayadArbabi - Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 23 Aug 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://theyahya.com/tags/performance/index.xml" rel="self" type="application/rss+xml"/><item><title>A Deep Look Into Golang Profile-Guided Optimization (PGO)</title><link>https://theyahya.com/posts/go-pgo/</link><pubDate>Wed, 23 Aug 2023 00:00:00 +0000</pubDate><guid>https://theyahya.com/posts/go-pgo/</guid><description>Intro Profile-Guided Optimization (PGO) is an optimization method which improves final compiled binary by using profile data hints and compiling the code based on those profiles.
There are several optimization mechanisms that compilers usually get into account when compiling your code to binary. Like dead code elimination, Register allocation, Constant folding or function inlining; you may split your code into smaller and smaller functions and different level of abstractions to ease up future changes and modifications, but from compiler point of view multiple calls to different functions may not be very optimize and sometimes compiler decides to inline your functions!</description></item></channel></rss>